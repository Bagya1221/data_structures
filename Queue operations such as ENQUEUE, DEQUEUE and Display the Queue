#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct {
    int top;
    int items[MAX];
} Stack;
void push(Stack* s, int data) { s->items[++s->top] = data; }
int pop(Stack* s) { return s->top == -1 ? -1 : s->items[s->top--]; }
int isEmpty(Stack* s) { return s->top == -1; }
void enqueue(Stack* s1, Stack* s2, int data) { push(s1, data); }
int dequeue(Stack* s1, Stack* s2) {
    if (isEmpty(s2)) {
        while (!isEmpty(s1)) push(s2, pop(s1));
    }
    return isEmpty(s2) ? -1 : pop(s2);
}

void display(Stack* s1, Stack* s2) {
    Stack temp = { .top = -1 };
    
    while (!isEmpty(s2)) push(&temp, pop(s2));
    while (!isEmpty(&temp)) printf("%d ", pop(&temp));
    
    while (!isEmpty(s1)) push(&temp, pop(s1));
    while (!isEmpty(&temp)) printf("%d ", pop(&temp));
    
    printf("\n");
}
int main() {
    Stack s1 = { .top = -1 }, s2 = { .top = -1 };
    enqueue(&s1, &s2, 10);
    enqueue(&s1, &s2, 20);
    enqueue(&s1, &s2, 30);
    printf("Queue: ");
    display(&s1, &s2);
    printf("Dequeued: %d\n", dequeue(&s1, &s2));
    printf("Queue: ");
    display(&s1, &s2);
    return 0;
}
