#include <stdio.h>
#define MAX 100
typedef struct {
    int top;
    char items[MAX];
} Stack;
void push(Stack* s, char c) { if (s->top < MAX - 1) s->items[++s->top] = c; }
char pop(Stack* s) { return s->top == -1 ? '\0' : s->items[s->top--]; }
int isEmpty(Stack* s) { return s->top == -1; }
int checkBalanced(const char* expr) {
    Stack s = { .top = -1 };
    for (int i = 0; expr[i]; i++) {
        if (expr[i] == '(' || expr[i] == '{' || expr[i] == '[') {
            push(&s, expr[i]);
        } else if (expr[i] == ')' || expr[i] == '}' || expr[i] == ']') {
            if (isEmpty(&s)) return 0;
            char top = pop(&s);
            if ((expr[i] == ')' && top != '(') ||
                (expr[i] == '}' && top != '{') ||
                (expr[i] == ']' && top != '[')) return 0;
        }
    }
    return isEmpty(&s);
}
int main() {
    char expr[MAX];
    printf("Enter expression: ");
    fgets(expr, sizeof(expr), stdin);

    printf("Parentheses are %s\n", checkBalanced(expr) ? "balanced" : "not balanced");
    return 0;
}
